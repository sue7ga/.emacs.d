
((digest . "9eceab1c16ce8104255630f44106faa2") (undo-list nil (#("print $ret->{title};" 0 5 (fontified t font-lock-multiline t face cperl-nonoverridable-face) 5 13 (fontified t) 13 18 (fontified t face font-lock-string-face) 18 20 (fontified t)) . 238) (t 21216 . 11356) ((marker) . -20) nil (235 . 236) nil (232 . 235) nil (#("%" 0 1 (fontified t)) . -232) nil (218 . 233) nil (#("
" 0 1 (fontified t)) . -218) nil (#("p" 0 1 (fontified t)) . -219) nil (219 . 220) nil (217 . 220) nil (#("kkkkkkkkkkkkkkkkkkkkkkk" 0 23 (fontified t)) . 217) nil (237 . 240) nil (217 . 237) (t 21216 . 11085) nil (131 . 134) (t 21216 . 11005) nil (#("print $ret->{descrip" 0 5 (face cperl-nonoverridable-face fontified t) 5 20 (fontified t)) . 236) nil (249 . 256) nil (#("P" 0 1 (fontified t)) . -249) nil (249 . 250) nil (248 . 249) nil (#("[" 0 1 (fontified t)) . -248) nil (248 . 249) nil (242 . 248) nil (#("%" 0 1 (fontified t)) . -242) nil (236 . 243) nil (235 . 236) nil (234 . 235) nil (233 . 234) nil (#("]" 0 1 (fontified t)) . -233) nil (233 . 234) nil (230 . 233) nil (#("l" 0 1 (fontified t)) . -230) nil (228 . 231) nil (227 . 228) nil (222 . 227) nil (#("r" 0 1 (fontified nil)) . -222) nil (#("e" 0 1 (fontified nil)) . -223) nil (#("w" 0 1 (fontified t)) . -224) nil (222 . 225) nil (#("e" 0 1 (fontified t)) . -222) nil (#("w" 0 1 (fontified t)) . -223) nil (#("r" 0 1 (fontified t)) . -224) nil (221 . 225) nil (#("%" 0 1 (fontified t)) . -221) nil (215 . 222) nil (213 . 215) nil (212 . 213) nil (211 . 212) nil (198 . 211) nil (#("2" 0 1 (face font-lock-string-face fontified t)) . -198) nil (197 . 199) nil (#("5" 0 1 (face font-lock-string-face fontified t)) . -197) nil (196 . 198) nil (195 . 196) nil (#("\"" 0 1 (face font-lock-string-face fontified t)) . -195) nil (187 . 196) nil (#("q" 0 1 (fontified t)) . -187) nil (#("w" 0 1 (fontified t)) . -188) nil (185 . 189) nil (#("%" 0 1 (fontified t)) . -185) nil (179 . 186) nil (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -179) nil (#("w" 0 1 (face font-lock-variable-name-face fontified t)) . -180) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -181) nil (178 . 182) nil (#("%" 0 1 (face font-lock-variable-name-face fontified t)) . -178) nil (175 . 179) nil (174 . 175) nil (173 . 174) nil (168 . 173) nil (#("=" 0 1 (fontified t)) . -168) nil (168 . 169) nil (#("_" 0 1 (fontified t)) . -168) nil (#("." 0 1 (fontified t)) . -169) nil (168 . 170) nil (139 . 168) (#("WebService::Li" 0 14 (fontified nil)) . -139) nil (151 . 153) nil (150 . 151) (#(":" 0 1 (fontified nil)) . 150) (149 . 151) nil (134 . 149) nil (#("e" 0 1 (fontified t)) . -134) nil (#("w" 0 1 (fontified t)) . -135) nil (131 . 136) nil (#("binmode STDOUT,\":utf8\";" 0 7 (face font-lock-type-face font-lock-multiline t fontified t) 7 15 (fontified t) 15 22 (face font-lock-string-face fontified t) 22 23 (fontified t)) . 131) nil (#("
" 0 1 (fontified t)) . 156) nil (#("
" 0 1 (fontified t)) . 156) nil (#("}" 0 1 (fontified t)) . 156) nil (#("
" 0 1 (fontified t)) . 156) nil (#("    print $condition->getAttribute(\"data\"),\"\\n\";" 0 4 (fontified t) 4 9 (face cperl-nonoverridable-face fontified t) 9 35 (fontified t) 35 41 (face font-lock-string-face fontified t) 41 43 (fontified t) 43 47 (face font-lock-string-face fontified t) 47 48 (fontified t)) . 156) nil (#("
" 0 1 (fontified t)) . 156) nil (#("    print $day_of_week->getAttribute(\"data\"),\" \";" 0 4 (fontified t) 4 9 (face cperl-nonoverridable-face fontified t) 9 37 (fontified t) 37 43 (face font-lock-string-face fontified t) 43 45 (fontified t) 45 48 (face font-lock-string-face fontified t) 48 49 (fontified t)) . 156) nil (#("
" 0 1 (fontified t)) . 156) nil (#("
" 0 1 (fontified t)) . 156) nil (#("    my $condition   = ($forecast->getElementsByTagName(\"condition\"))[0];" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 17 (face font-lock-variable-name-face fontified t) 17 55 (fontified t) 55 66 (face font-lock-string-face fontified t) 66 72 (fontified t)) . 156) nil (#("
" 0 1 (fontified t)) . 156) nil (#("    my $day_of_week = ($forecast->getElementsByTagName(\"day_of_week\"))[0];" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 19 (face font-lock-variable-name-face fontified t) 19 55 (fontified t) 55 68 (face font-lock-string-face fontified t) 68 74 (fontified t)) . 156) nil (#("
" 0 1 (fontified t)) . 156) nil (#("foreach my $forecast ( $doc->findnodes(\"//forecast_conditions\") ){   " 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 20 (face font-lock-variable-name-face fontified t) 20 39 (fontified t) 39 62 (face font-lock-string-face fontified t) 62 66 (fontified t) 66 69 (face underline fontified t)) . 156) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 156) nil (#("
" 0 1 (fontified t)) . 156) nil (#("my $doc = XML::LibXML->new()->parse_string($weather_xml);" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 7 (face font-lock-variable-name-face fontified t) 7 57 (fontified t)) . 156) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 156) nil (#("
" 0 1 (fontified t)) . 156) nil (#("die \"Can't get $url\\n\" unless defined $weather_xml;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 22 (face font-lock-string-face fontified t) 22 23 (fontified t) 23 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 37 (face cperl-nonoverridable-face fontified t) 37 51 (fontified t)) . 156) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 156) nil (#("
" 0 1 (fontified t)) . 156) nil (#("my $weather_xml = get $url;" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 15 (face font-lock-variable-name-face fontified t) 15 27 (fontified t)) . 156) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 156) nil (#("my $url    = 'http://weather.yahooapis.com/forecastrss?=2502265';" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 7 (face font-lock-variable-name-face fontified t) 7 13 (fontified t) 13 64 (face font-lock-string-face fontified t) 64 65 (fontified t)) . 156) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 156) nil (#("my $region = shift @ARGV or die \"usage google_weather.pl region\\n\";" 0 2 (face font-lock-keyword-face font-lock-multiline t fontified t) 2 3 (fontified t) 3 10 (face font-lock-variable-name-face fontified t) 10 13 (fontified t) 13 18 (face cperl-nonoverridable-face fontified t) 18 19 (fontified t) 19 24 (face cperl-array-face fontified t) 24 25 (fontified t) 25 27 (face font-lock-type-face fontified t) 27 28 (fontified t) 28 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 66 (face font-lock-string-face fontified t) 66 67 (fontified t)) . 156) nil (128 . 129) nil (121 . 128) nil (120 . 121) (#(":" 0 1 (fontified nil)) . 120) (119 . 121) nil (111 . 119) nil (110 . 111) (#(":" 0 1 (fontified nil)) . 110) (109 . 111) nil (102 . 109) nil (#("S" 0 1 (fontified t)) . -102) nil (#("e" 0 1 (fontified t)) . -103) nil (#("r" 0 1 (fontified t)) . -104) nil (#("v" 0 1 (fontified t)) . -105) nil (#("i" 0 1 (fontified t)) . -106) nil (#("e" 0 1 (fontified t)) . -107) nil (99 . 108) nil (#("W" 0 1 (fontified t)) . -99) nil (#("e" 0 1 (fontified t)) . -100) nil (#("b" 0 1 (fontified t)) . -101) nil (#("S" 0 1 (fontified t)) . -102) nil (#("e" 0 1 (fontified t)) . -103) nil (#("r" 0 1 (fontified t)) . -104) nil (95 . 105) nil (95 . 96) nil (#("p" 0 1 (fontified t)) . -95) nil (95 . 96) (t 21216 . 10869) nil (253 . 254) nil (251 . 253) nil (#("4" 0 1 (fontified t face font-lock-string-face)) . -251) nil (250 . 252) nil (#("5" 0 1 (fontified t face font-lock-string-face)) . -250) nil (243 . 251) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . -243) nil (243 . 244) nil (#("
" 0 1 (fontified t face font-lock-string-face)) . -243) nil (#("?" 0 1 (fontified t face font-lock-string-face)) . -244) nil (244 . 245) nil (243 . 244) nil (223 . 243) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -223) nil (208 . 224) nil (207 . 208) nil (203 . 207) nil (#("http://www.google.com/ig/api?weather='.$region;" 0 38 (fontified t face font-lock-string-face) 38 47 (fontified t)) . 203) (t 21216 . 10600) nil (434 . 442) nil (#("c" 0 1 (face font-lock-string-face fontified t)) . -434) nil (#("u" 0 1 (face font-lock-string-face fontified t)) . -435) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -436) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -437) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -438) nil (#("n" 0 1 (face font-lock-string-face fontified t)) . -439) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -440) (t 21216 . 10493) nil (434 . 441) nil (#("f" 0 1 (fontified t face font-lock-string-face)) . -434) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -435) nil (#("r" 0 1 (fontified t face font-lock-string-face)) . -436) nil (#("e" 0 1 (fontified t face font-lock-string-face)) . -437) nil (#("c" 0 1 (fontified t face font-lock-string-face)) . -438) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -439) nil (#("s" 0 1 (fontified t face font-lock-string-face)) . -440) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -441) (t 21216 . 10413) nil (#("h" 0 1 (face font-lock-string-face fontified t)) . -233) (t 21216 . 10249) nil (#("
" 0 1 (fontified t)) . -459) nil (#("
" 0 1 (fontified t)) . -459) nil (#("    print Dumper $forecast;" 0 4 (fontified t) 4 9 (face cperl-nonoverridable-face fontified t) 9 27 (fontified t)) . 460) (t 21216 . 10235) nil (486 . 487) nil (481 . 486) nil (#("e" 0 1 (fontified nil)) . -481) nil (478 . 482) nil (#("%" 0 1 (fontified t)) . -478) nil (464 . 479) nil (#("p" 0 1 (fontified t)) . -464) nil (#("i" 0 1 (fontified t)) . -465) nil (#("n" 0 1 (fontified t)) . -466) nil (#("r" 0 1 (fontified t)) . -467) nil (#("t" 0 1 (fontified t)) . -468) nil (#(" " 0 1 (fontified t face underline)) . -469) nil (460 . 470) nil (461 . 464) nil (460 . 462) (t 21216 . 10126) nil (#("
" 0 1 (fontified t)) . -391) nil (#("
" 0 1 (fontified t)) . -392) nil (#("print \"$region weather\\n\"" 0 5 (face cperl-nonoverridable-face font-lock-multiline t fontified t) 5 6 (fontified t) 6 25 (face font-lock-string-face fontified t)) . 393) nil (483 . 484) nil (442 . 443) nil (440 . 441) nil (#(" " 0 1 (face underline fontified t)) . -558) nil (#(" " 0 1 (face underline fontified t)) . -559) nil (#(" " 0 1 (face underline fontified t)) . -633) nil (#(" " 0 1 (face underline fontified t)) . -634) nil (#("
" 0 1 (fontified t)) . -735) (t 21216 . 9957) nil (736 . 737) (t 21216 . 9933) nil (#(" " 0 1 (fontified t)) . -441) nil (441 . 442) nil (#(" " 0 1 (fontified t)) . -440) (t 21216 . 9811) nil (580 . 582) nil (418 . 419) nil (413 . 418) nil (393 . 413) nil (392 . 393) nil (#("
" 0 1 (fontified t)) . -333) (t 21216 . 9657) nil (#("f" 0 1 (fontified t)) . -284) nil (284 . 285) nil (118 . 119) nil (116 . 118) nil (#("7" 0 1 (fontified t face font-lock-string-face)) . -116) nil (116 . 117) nil (#("9" 0 1 (fontified t face font-lock-string-face)) . -116) nil (113 . 117) nil (112 . 113) nil (96 . 112) nil (96 . 97) (t 21216 . 9623) nil (683 . 684) nil (682 . 683) nil (679 . 680) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -679) nil (680 . 682) nil (#("=" 0 1 (face font-lock-string-face fontified t)) . -680) nil (#("n" 0 1 (face font-lock-string-face fontified t)) . -681) nil (680 . 682) nil (#("=" 0 1 (face font-lock-string-face fontified t)) . -680) nil (679 . 681) nil (#("\\" 0 1 (fontified t)) . -679) nil (678 . 680) nil (#(";" 0 1 (fontified t)) . -678) nil (678 . 679) nil (677 . 678) nil (671 . 677) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -671) nil (671 . 672) nil (670 . 671) nil (#("G" 0 1 (fontified t)) . -670) nil (670 . 671) nil (656 . 670) nil (#(" " 0 1 (face underline fontified t)) . -656) nil (#("=" 0 1 (fontified t)) . -657) nil (#(" " 0 1 (face underline fontified t)) . -658) nil (656 . 659) nil (647 . 656) (#("conditio" 0 8 (fontified nil)) . -647) nil (647 . 655) nil (#("d" 0 1 (fontified t)) . -647) nil (647 . 648) nil (#("d" 0 1 (fontified nil)) . -647) nil (#("a" 0 1 (fontified nil)) . -648) nil (639 . 649) nil (634 . 635) nil (631 . 634) nil (#(" " 0 1 (face underline fontified t)) . -631) nil (630 . 632) nil (#(";" 0 1 (fontified t)) . -630) nil (630 . 631) nil (629 . 630) nil (623 . 629) nil (622 . 623) nil (608 . 622) nil (#("=" 0 1 (fontified t)) . -608) nil (608 . 609) nil (#("=" 0 1 (fontified t)) . -608) nil (#(">" 0 1 (fontified t)) . -609) nil (608 . 610) nil (#("+" 0 1 (fontified t)) . -608) nil (608 . 609) nil (#("_" 0 1 (fontified t)) . -608) nil (608 . 609) nil (597 . 608) (#("day_" 0 4 (fontified nil)) . -597) nil (596 . 601) nil (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -596) nil (#("$" 0 1 (face font-lock-comment-face fontified t)) . -597) nil (596 . 598) nil (#("%" 0 1 (fontified t)) . -596) nil (590 . 597) nil (#(" " 0 1 (face underline fontified t)) . -590) nil (#("p" 0 1 (fontified t)) . -591) nil (#("i" 0 1 (fontified t)) . -592) nil (#("n" 0 1 (fontified t)) . -593) nil (#("r" 0 1 (fontified t)) . -594) nil (#("t" 0 1 (fontified t)) . -595) nil (#(" " 0 1 (face underline fontified t)) . -596) nil (586 . 597) nil (587 . 590) nil (584 . 587) nil (566 . 575) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -566) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -567) nil (#("y" 0 1 (face font-lock-string-face fontified t)) . -568) nil (#("_" 0 1 (face font-lock-string-face fontified t)) . -569) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -570) nil (#("f" 0 1 (face font-lock-string-face fontified t)) . -571) nil (#("_" 0 1 (face font-lock-string-face fontified t)) . -572) nil (#("w" 0 1 (face font-lock-string-face fontified t)) . -573) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -574) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -575) nil (#("k" 0 1 (face font-lock-string-face fontified t)) . -576) nil (520 . 529) nil (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -520) nil (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -521) nil (#("y" 0 1 (face font-lock-variable-name-face fontified t)) . -522) nil (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -523) nil (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -524) nil (#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -525) nil (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -526) nil (#("w" 0 1 (face font-lock-variable-name-face fontified t)) . -527) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -528) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -529) nil (#("k" 0 1 (face font-lock-variable-name-face fontified t)) . -530) nil (#("
" 0 1 (fontified t)) . -588) nil (nil rear-nonsticky nil 587 . 588) (nil fontified nil 586 . 588) (nil fontified nil 580 . 586) (nil fontified nil 568 . 580) (nil fontified nil 567 . 568) (nil fontified nil 546 . 567) (nil fontified nil 533 . 546) (nil fontified nil 531 . 533) (nil fontified nil 519 . 531) (nil fontified nil 518 . 519) (nil fontified nil 516 . 518) (nil fontified nil 514 . 516) (514 . 588) nil (nil rear-nonsticky nil 510 . 511) (nil fontified nil 509 . 511) (nil fontified nil 503 . 509) (nil fontified nil 491 . 503) (nil fontified nil 490 . 491) (nil fontified nil 469 . 490) (nil fontified nil 456 . 469) (nil fontified nil 454 . 456) (nil fontified nil 442 . 454) (nil fontified nil 441 . 442) (nil fontified nil 439 . 441) (nil fontified nil 437 . 439) (437 . 511) nil (#("  my $day_of_week = ($forecast->getElementsByTagName(\"day_of_week\"))[0];  " 0 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 17 (face font-lock-variable-name-face fontified t) 17 19 (fontified t) 19 32 (fontified t) 32 53 (fontified t) 53 54 (face font-lock-string-face fontified t) 54 66 (face font-lock-string-face fontified t) 66 72 (fontified t) 72 74 (face underline fontified t)) . 437) nil (512 . 514) nil (508 . 509) nil (507 . 508) nil (#("-" 0 1 (fontified t)) . -507) nil (506 . 508) nil (505 . 506) nil (503 . 505) nil (502 . 503) nil (491 . 502) (#("day" 0 3 (face font-lock-string-face fontified t)) . -491) nil (490 . 494) nil (489 . 490) nil (482 . 489) nil (462 . 482) nil (#("e" 0 1 (fontified t)) . -462) nil (#("s" 0 1 (fontified t)) . -463) nil (#("t" 0 1 (fontified t)) . -464) nil (458 . 465) nil (457 . 458) nil (452 . 457) nil (#("k" 0 1 (face font-lock-variable-name-face fontified t)) . -452) nil (#("k" 0 1 (face font-lock-variable-name-face fontified t)) . -453) nil (447 . 454) nil (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -447) nil (443 . 448) nil (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -443) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -444) nil (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -445) nil (#("y" 0 1 (face font-lock-variable-name-face fontified t)) . -446) nil (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -447) nil (443 . 448) nil (#(" " 0 1 (face underline fontified t)) . -443) nil (442 . 444) nil (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -442) nil (442 . 443) nil (#("%" 0 1 (fontified t)) . -442) nil (435 . 443) nil (437 . 438) nil (435 . 437) nil (437 . 438) (#("}" 0 1 (fontified nil)) . -437) (437 . 438) nil (434 . 437) nil (433 . 434) (#("{" 0 1 (fontified nil)) . -433) (433 . 434) nil (431 . 433) nil (414 . 431) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -414) nil (408 . 415) nil (407 . 408) nil (404 . 407) nil (#("e" 0 1 (fontified t)) . -404) nil (398 . 405) nil (#("f" 0 1 (fontified t)) . -398) nil (#("i" 0 1 (fontified t)) . -399) nil (#("n" 0 1 (fontified t)) . -400) nil (#("d" 0 1 (fontified t)) . -401) nil (#("n" 0 1 (fontified t)) . -402) nil (#("e" 0 1 (fontified t)) . -403) nil (393 . 404) nil (#("c" 0 1 (fontified nil)) . -393) nil (#("o" 0 1 (fontified nil)) . -394) nil (#("d" 0 1 (fontified t)) . -395) nil (392 . 396) nil (391 . 392) nil (381 . 391) nil (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -381) nil (#("$" 0 1 (face font-lock-comment-face fontified t)) . -382) nil (381 . 383) nil (#("@" 0 1 (face font-lock-variable-name-face fontified t)) . -381) nil (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -382) nil (381 . 383) nil (#("%" 0 1 (face font-lock-variable-name-face fontified t)) . -381) nil (#("f" 0 1 (face cperl-hash-face fontified nil)) . -382) nil (#("o" 0 1 (face cperl-hash-face fontified nil)) . -383) nil (#("r" 0 1 (face cperl-hash-face fontified nil)) . -384) nil (#("e" 0 1 (face cperl-hash-face fontified nil)) . -385) nil (370 . 386) nil (#("f" 0 1 (fontified nil)) . -370) nil (#("o" 0 1 (fontified nil)) . -371) nil (#("r" 0 1 (face font-lock-keyword-face fontified nil)) . -372) nil (#("e" 0 1 (fontified t)) . -373) nil (#("a" 0 1 (fontified t)) . -374) nil (#("h" 0 1 (fontified t)) . -375) nil (370 . 376) nil (#("p" 0 1 (fontified t)) . -370) nil (370 . 371) nil (#("print Dumper $doc;" 0 5 (face cperl-nonoverridable-face font-lock-multiline t fontified t) 5 18 (fontified t)) . 370) (t 21216 . 9414) nil (59 . 60) (t 21216 . 9400) nil (53 . 59) nil (52 . 53) (#(":" 0 1 (fontified nil)) . 52) (51 . 53) nil (47 . 51) nil (#("d" 0 1 (fontified t)) . -47) nil (47 . 48) nil (#("D" 0 1 (face font-lock-function-name-face fontified nil)) . -47) nil (#("u" 0 1 (face font-lock-function-name-face fontified nil)) . -48) nil (#("m" 0 1 (face font-lock-function-name-face fontified nil)) . -49) nil (#("p" 0 1 (face font-lock-function-name-face fontified nil)) . -50) nil (#("e" 0 1 (face font-lock-function-name-face fontified nil)) . -51) nil (#("r" 0 1 (fontified t)) . -52) nil (47 . 53) (#("D" 0 1 (face font-lock-function-name-face fontified nil)) . -47) nil (#("u" 0 1 (face font-lock-function-name-face fontified nil)) . -48) nil (#("m" 0 1 (face font-lock-function-name-face fontified nil)) . -49) nil (#("p" 0 1 (face font-lock-function-name-face fontified nil)) . -50) nil (43 . 51) nil (#("u" 0 1 (fontified nil)) . -43) nil (#("s" 0 1 (fontified nil)) . -44) nil (#("r" 0 1 (fontified t)) . -45) nil (#("e" 0 1 (fontified t)) . -46) nil (#(" " 0 1 (face underline fontified t)) . -47) nil (43 . 48) (t 21216 . 9351) nil (#("n" 0 1 (fontified t)) . -372) nil (#("h" 0 1 (fontified t)) . -339) (t 21216 . 9324) nil (374 . 375) nil (373 . 374) (t 21216 . 7338) nil (372 . 373) nil (371 . 372) nil (354 . 371) nil (352 . 354) nil (351 . 352) nil (350 . 351) nil (#("_" 0 1 (fontified t)) . -350) nil (346 . 351) nil (338 . 346) (#("whe" 0 3 (fontified nil)) . -338) nil (337 . 341) nil (336 . 337) nil (330 . 336) nil (#("S" 0 1 (fontified t)) . -330) nil (322 . 331) nil (321 . 322) nil (320 . 321) nil (315 . 320) nil (#("=" 0 1 (fontified t)) . -315) nil (315 . 316) nil (#("0" 0 1 (fontified t)) . -315) nil (#("-" 0 1 (fontified t)) . -316) nil (315 . 317) nil (304 . 315) (#("XML" 0 3 (fontified nil)) . -304) nil (297 . 307) nil (#("%" 0 1 (fontified t)) . -297) nil (294 . 298) nil (291 . 294) nil (290 . 291) nil (279 . 290) (#("weather" 0 7 (fontified nil)) . -279) nil (278 . 286) nil (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -278) nil (#("$" 0 1 (fontified t face font-lock-comment-face)) . -279) nil (271 . 280) nil (251 . 271) nil (#("g" 0 1 (fontified t face font-lock-string-face)) . -251) nil (#("f" 0 1 (fontified t face font-lock-string-face)) . -252) nil (#("e" 0 1 (fontified t face font-lock-string-face)) . -253) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -254) nil (248 . 255) nil (#("-" 0 1 (fontified t face font-lock-string-face)) . -248) nil (248 . 249) nil (#("=" 0 1 (fontified t face font-lock-string-face)) . -248) nil (248 . 249) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -248) nil (#(" " 0 1 (fontified t face underline font-lock-multiline t)) . -249) nil (244 . 250) nil (#("C" 0 1 (fontified t)) . -244) nil (241 . 245) nil (#("u" 0 1 (fontified t)) . -241) nil (#("i" 0 1 (fontified t)) . -242) nil (#("e" 0 1 (fontified t)) . -243) nil (240 . 244) nil (#("s" 0 1 (fontified t font-lock-multiline t face cperl-nonoverridable-face)) . -240) nil (#("u" 0 1 (fontified t)) . -241) nil (#("w" 0 1 (fontified t)) . -242) nil (#(" " 0 1 (fontified t font-lock-multiline t face underline)) . -243) nil (240 . 244) nil (239 . 240) nil (#("
" 0 1 (fontified t)) . -239) nil (#("
" 0 1 (fontified t)) . -240) nil (238 . 241) nil (237 . 238) nil (233 . 237) nil (#("%" 0 1 (fontified t)) . -233) nil (214 . 234) nil (#("%" 0 1 (fontified t)) . -214) nil (211 . 215) nil (#("
" 0 1 (fontified t)) . -211) nil (210 . 212) nil (209 . 210) nil (203 . 209) nil (#("%" 0 1 (fontified t)) . -203) nil (187 . 204) nil (167 . 187) nil (166 . 167) nil (165 . 166) nil (#("P" 0 1 (fontified t face font-lock-string-face)) . -165) nil (#(";" 0 1 (fontified t face font-lock-string-face)) . -166) nil (166 . 167) nil (165 . 166) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -165) nil (159 . 166) nil (#("-" 0 1 (fontified t)) . -159) nil (#("=" 0 1 (fontified t)) . -160) nil (158 . 161) nil (#("=" 0 1 (fontified t)) . -158) nil (#(" " 0 1 (fontified t font-lock-multiline t face underline)) . -159) nil (155 . 160) nil (#(" " 0 1 (fontified t font-lock-multiline t face underline)) . -155) nil (#("=" 0 1 (fontified t)) . -156) nil (156 . 157) nil (#(" " 0 1 (fontified t font-lock-multiline t face underline)) . -156) nil (#("=" 0 1 (fontified t)) . -157) nil (156 . 158) nil (#("\\" 0 1 (fontified t)) . -156) nil (#("=" 0 1 (fontified t)) . -157) nil (#(" " 0 1 (fontified t font-lock-multiline t face underline)) . -158) nil (151 . 159) nil (#("%" 0 1 (fontified t)) . -151) nil (151 . 152) nil (#("%" 0 1 (fontified t)) . -151) nil (148 . 152) nil (#("
" 0 1 (fontified t)) . -148) nil (147 . 149) nil (146 . 147) nil (140 . 146) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -140) nil (#("n" 0 1 (fontified t face font-lock-string-face)) . -141) nil (137 . 142) nil (#("e" 0 1 (fontified t face font-lock-string-face)) . -137) nil (126 . 138) nil (#("e" 0 1 (fontified t face font-lock-string-face)) . -126) nil (126 . 127) nil (#("w" 0 1 (fontified t face font-lock-string-face)) . -126) nil (#("e" 0 1 (fontified t face font-lock-string-face)) . -127) nil (113 . 128) nil (#("s" 0 1 (fontified t face font-lock-string-face font-lock-multiline t)) . -113) nil (#("u" 0 1 (fontified t face font-lock-string-face)) . -114) nil (113 . 115) nil (#("s" 0 1 (fontified t face font-lock-string-face font-lock-multiline t)) . -113) nil (#("u" 0 1 (fontified t face font-lock-string-face)) . -114) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -115) nil (113 . 116) nil (#("u" 0 1 (fontified t face font-lock-string-face)) . -113) nil (#("u" 0 1 (fontified t face font-lock-string-face)) . -114) nil (#("s" 0 1 (fontified t face font-lock-string-face)) . -115) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -116) nil (114 . 117) nil (#("s" 0 1 (fontified nil face font-lock-string-face)) . -114) nil (113 . 115) nil (#("S" 0 1 (fontified t face font-lock-string-face)) . -113) nil (108 . 114) nil (#("d" 0 1 (fontified t)) . -108) nil (#("i" 0 1 (fontified t)) . -109) nil (#("f" 0 1 (fontified t)) . -110) nil (105 . 111) nil (#("i" 0 1 (fontified nil)) . -105) nil (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -106) nil (93 . 107) nil (#("s" 0 1 (fontified t font-lock-multiline t face cperl-nonoverridable-face)) . -93) nil (#("h" 0 1 (fontified t)) . -94) nil (#("f" 0 1 (fontified t)) . -95) nil (#("i" 0 1 (fontified t)) . -96) nil (#("t" 0 1 (fontified t)) . -97) nil (#(" " 0 1 (fontified t font-lock-multiline t face underline)) . -98) nil (83 . 99) nil (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -83) nil (83 . 84) nil (#("%" 0 1 (fontified t)) . -83) nil (80 . 84) nil (77 . 80) nil (76 . 77) nil (#("p" 0 1 (fontified t)) . -76) nil (#(";" 0 1 (fontified t font-lock-multiline t)) . -77) nil (77 . 78) nil (76 . 77) nil (#("
" 0 1 (fontified t)) . -76) nil (76 . 77) nil (70 . 76) nil (69 . 70) (#(":" 0 1 (fontified nil)) . 69) (68 . 70) nil (61 . 68) nil (60 . 61) nil (59 . 60) nil (53 . 59) nil (52 . 53) (#(":" 0 1 (fontified nil)) . 52) (51 . 53) nil (44 . 51) nil (43 . 44) nil (#("
" 0 1 (fontified t)) . 43) nil (#("
" 0 1 (fontified t)) . 43) nil (#("print $item->{title};" 0 5 (fontified t face cperl-nonoverridable-face) 5 14 (fontified t) 14 19 (fontified t face font-lock-string-face) 19 21 (fontified t)) . 43) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . 43) nil (#("
" 0 1 (fontified t)) . 43) nil (#("my $item = WebService::Livedoor::Weather->new()->get(63,'tomorrow');" 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 8 (fontified t face font-lock-variable-name-face) 8 56 (fontified t) 56 66 (fontified t face font-lock-string-face) 66 68 (fontified t)) . 43) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . 43) nil (#("
" 0 1 (fontified t)) . 43) nil (#("use WebService::Livedoor::Weather;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 33 (fontified t face font-lock-function-name-face) 33 34 (fontified t)) . 43) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . 43) nil (#("use Net::Twitter;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t)) . 43) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . 43) nil (#("use utf8;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t)) . 43) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . 43) nil (#("use URI;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-function-name-face) 7 8 (fontified t)) . 43) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . 43) nil (#("use Web::Scraper;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t)) . 43) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . 43) nil (#("use Data::Dumper;" 0 3 (fontified t font-lock-multiline t face font-lock-keyword-face) 3 4 (fontified t) 4 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t)) . 43) (t 21216 . 6036) nil (244 . 245) nil (242 . 243) nil (241 . 242) nil (#("{" 0 1 (fontified t)) . -241) nil (241 . 242) nil (236 . 241) nil (#("t" 0 1 (fontified t)) . -236) nil (#("r" 0 1 (face cperl-nonoverridable-face fontified t)) . -237) nil (#("i" 0 1 (fontified t)) . -238) nil (236 . 239) nil (235 . 236) nil (229 . 235) nil (#("t" 0 1 (fontified t)) . -229) nil (#("e" 0 1 (fontified t)) . -230) nil (229 . 231) nil (#("%" 0 1 (fontified t)) . -229) nil (228 . 230) nil (#("%" 0 1 (fontified t)) . -228) nil (#("$" 0 1 (fontified t)) . -229) nil (222 . 230) nil (220 . 222) nil (219 . 220) nil (218 . 219) nil (206 . 218) nil (#("2" 0 1 (fontified t)) . -206) nil (205 . 207) nil (#("5" 0 1 (fontified t)) . -205) nil (205 . 206) nil (204 . 205) nil (199 . 204) nil (198 . 199) nil (197 . 198) nil (192 . 197) nil (#("=" 0 1 (fontified t)) . -192) nil (192 . 193) nil (#("\\" 0 1 (fontified t)) . -192) nil (192 . 193) nil (#("=" 0 1 (fontified t)) . -192) nil (192 . 193) nil (#("_" 0 1 (fontified t)) . -192) nil (#("," 0 1 (fontified t)) . -193) nil (#("." 0 1 (fontified t)) . -194) nil (192 . 195) nil (163 . 192) (#("WebSer" 0 6 (fontified nil)) . -163) nil (155 . 169) nil (#("%" 0 1 (face font-lock-variable-name-face fontified t)) . -155) nil (#("t" 0 1 (face cperl-hash-face fontified t)) . -156) nil (#("e" 0 1 (face cperl-hash-face fontified t)) . -157) nil (152 . 158) nil (#("
" 0 1 (fontified t)) . 152) nil (#("
" 0 1 (fontified t)) . 152) nil (#("//@~ 東京 神奈川とかコード変換、明日とか昨日とか、今日とかで判定" 0 1 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 1 2 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 8 (fontified t) 8 11 (fontified t) 11 13 (fontified t) 13 16 (fontified t) 16 18 (fontified t) 18 19 (fontified t) 19 21 (fontified t) 21 23 (fontified t) 23 25 (fontified t) 25 28 (fontified t) 28 30 (fontified t) 30 32 (fontified t) 32 33 (fontified t) 33 35 (fontified t)) . 152) nil (#("
" 0 1 (fontified t)) . 152) nil (#("
" 0 1 (fontified t)) . 152) nil (#("my $result = \"\";//Tweet取得" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 10 (face font-lock-variable-name-face fontified t) 10 13 (fontified t) 13 15 (face font-lock-string-face fontified t) 15 16 (fontified t) 16 17 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 17 18 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 18 23 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified t) 23 25 (fontified t)) . 152) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 152) nil (#("
" 0 1 (fontified t)) . 152) nil (#("}" 0 1 (fontified t)) . 152) nil (#("
" 0 1 (fontified t)) . 152) nil (#("    access_token_secret => ," 0 4 (fontified t) 4 23 (face font-lock-string-face fontified t) 23 28 (fontified t)) . 152) nil (#("
" 0 1 (fontified t)) . 152) nil (#("    access_token => ," 0 4 (fontified t) 4 16 (face font-lock-string-face fontified t) 16 21 (fontified t)) . 152) nil (#("
" 0 1 (fontified t)) . 152) nil (#("    consumer_key => ," 0 4 (fontified t) 4 16 (face font-lock-string-face fontified t) 16 19 (fontified t) 19 21 (fontified t)) . 152) nil (#("
" 0 1 (fontified t)) . 152) nil (#("    consumer_key => bq8Z7921Vf3uBmgkUuK2w," 0 4 (fontified t) 4 16 (face font-lock-string-face fontified t) 16 20 (fontified t) 20 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t)) . 152) nil (#("
" 0 1 (fontified t)) . 152) nil (#("my $nt = Net::Twitter->new{" 0 2 (face font-lock-keyword-face font-lock-multiline t fontified t) 2 3 (fontified t) 3 6 (face font-lock-variable-name-face fontified t) 6 27 (fontified t)) . 152) nil (149 . 150) nil (142 . 149) nil (141 . 142) (#(":" 0 1 (fontified nil)) . 141) (140 . 142) nil (132 . 140) nil (131 . 132) (#(":" 0 1 (fontified nil)) . 131) (130 . 132) nil (116 . 130) nil (116 . 117) nil (298 . 299) nil (#("　" 0 1 (fontified t)) . -298) nil (#("
" 0 1 (fontified t)) . -327) nil (#("W" 0 1 (fontified t)) . -328) nil (#("E" 0 1 (fontified t)) . -329) nil (328 . 330) nil (328 . 329) nil (324 . 326) nil (323 . 324) nil (321 . 323) nil (319 . 321) nil (316 . 319) nil (314 . 316) nil (#("機" 0 1 (fontified t)) . -314) nil (#("能" 0 1 (fontified t)) . -315) nil (314 . 316) nil (312 . 314) nil (310 . 312) nil (309 . 310) nil (307 . 309) nil (304 . 307) nil (302 . 304) nil (299 . 302) nil (298 . 299) nil (296 . 298) nil (295 . 296) nil (294 . 295) nil (#("空" 0 1 (fontified t)) . -294) nil (294 . 295) nil (293 . 294) nil (#("2" 0 1 (fontified t)) . -293) nil (291 . 294) nil (#("p" 0 1 (fontified t)) . -291) nil (291 . 292) nil (289 . 291) nil (287 . 289) nil (280 . 287) nil (277 . 279) nil (#("$" 0 1 (fontified t)) . -277) nil (#("n" 0 1 (fontified t)) . -278) nil (#("t" 0 1 (fontified t)) . -279) nil (#("-" 0 1 (fontified t)) . -280) nil (#(">" 0 1 (fontified t)) . -281) nil (#("u" 0 1 (fontified t)) . -282) nil (#("p" 0 1 (fontified t)) . -283) nil (#("d" 0 1 (fontified t)) . -284) nil (#("a" 0 1 (fontified t)) . -285) nil (#("t" 0 1 (fontified t)) . -286) nil (#("e" 0 1 (fontified t)) . -287) nil (#("(" 0 1 (fontified t)) . -288) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -289) nil (#("H" 0 1 (face font-lock-string-face fontified t)) . -290) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -291) nil (#("l" 0 1 (face font-lock-string-face fontified t)) . -292) nil (#("l" 0 1 (face font-lock-string-face fontified t)) . -293) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -294) nil (#("W" 0 1 (face font-lock-string-face fontified t)) . -295) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -296) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -297) nil (#("l" 0 1 (face font-lock-string-face fontified t)) . -298) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -299) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -300) nil (#(")" 0 1 (fontified t)) . -301) nil (164 . 165) nil (#("
" 0 1 (fontified t)) . -116) nil (#("
" 0 1 (fontified t)) . -116) nil (#("
" 0 1 (fontified t)) . -117) nil (#("
" 0 1 (fontified t)) . -118) nil (#("Access token URL	https://api.twitter.com/oauth/access_token" 0 23 (fontified t) 23 24 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 24 25 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 25 28 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified t) 28 58 (fontified t) 58 59 (fontified t)) . 119) nil (#("
" 0 1 (fontified t)) . 119) nil (#("Authorize URL	https://api.twitter.com/oauth/authorize" 0 20 (fontified t) 20 21 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 21 22 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 22 25 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified t) 25 53 (fontified t)) . 119) nil (#("
" 0 1 (fontified t)) . 119) nil (#("Request token URL	https://api.twitter.com/oauth/request_token" 0 24 (fontified t) 24 25 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 25 26 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 26 29 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified t) 29 61 (fontified t)) . 119) nil (#("
" 0 1 (fontified t)) . 119) nil (#("Consumer secret	" 0 15 (fontified t) 15 16 (face underline fontified t)) . 119) nil (#("
Request token URL	https://api.twitter.com/oauth/request_token
Authorize URL	https://api.twitter.com/oauth/authorize
Access token URL	https://api.twitter.com/oauth/access_token

my $nt = Net::Twitter->new{
    consumer_key =>bq8Z7921Vf3uBmgkUuK2w,
    consumer_key =>" 0 1 (fontified nil) 1 25 (fontified nil) 25 26 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 26 27 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 27 30 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified nil) 30 63 (fontified nil) 63 83 (fontified nil) 83 84 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 84 85 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 85 88 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified nil) 88 117 (fontified nil) 117 140 (fontified nil) 140 141 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 141 142 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 142 145 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified nil) 145 175 (fontified nil) 175 176 (fontified nil) 176 177 (fontified nil) 177 178 (font-lock-multiline t fontified nil) 178 180 (face font-lock-keyword-face font-lock-multiline t fontified nil) 180 181 (fontified nil) 181 184 (face font-lock-variable-name-face fontified nil) 184 206 (fontified nil) 206 210 (fontified nil) 210 222 (face font-lock-string-face fontified nil) 222 225 (fontified nil) 225 245 (fontified nil) 245 246 (fontified nil) 246 248 (fontified nil) 248 252 (fontified nil) 252 264 (face font-lock-string-face fontified nil) 264 266 (fontified nil) 266 267 (rear-nonsticky nil fontified nil)) . 117) (nil fontified t 117 . 118) (nil fontified t 147 . 180) (nil fontified t 205 . 234) (nil fontified t 293 . 294) (nil fontified t 301 . 323) (nil fontified t 363 . 365) (nil rear-nonsticky nil 383 . 384) nil (nil rear-nonsticky nil 383 . 384) (nil fontified nil 381 . 384) (nil fontified nil 369 . 381) (nil fontified nil 365 . 369) (nil fontified nil 363 . 365) (nil fontified nil 362 . 363) (nil fontified nil 342 . 362) (nil fontified nil 339 . 342) (nil fontified nil 327 . 339) (nil fontified nil 323 . 327) (nil fontified nil 301 . 323) (nil fontified nil 298 . 301) (nil fontified nil 297 . 298) (nil fontified nil 295 . 297) (nil fontified nil 294 . 295) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 262 . 292) (nil fontified nil 259 . 262) (nil fontified nil 258 . 259) (nil fontified nil 257 . 258) (nil fontified nil 205 . 257) (nil fontified nil 202 . 205) (nil fontified nil 201 . 202) (nil fontified nil 200 . 201) (nil fontified nil 180 . 200) (nil fontified nil 147 . 180) (nil fontified nil 144 . 147) (nil fontified nil 143 . 144) (nil fontified nil 142 . 143) (nil fontified nil 118 . 142) (nil fontified nil 117 . 118) (117 . 384) nil (117 . 118) nil (#("
Request token URL	https://api.twitter.com/oauth/request_token
Authorize URL	https://api.twitter.com/oauth/authorize
Access token URL	https://api.twitter.com/oauth/access_token

my $nt = Net::Twitter->new{
    consumer_key =>bq8Z7921Vf3uBmgkUuK2w,
    consumer_key =>" 0 1 (fontified nil) 1 25 (fontified nil) 25 26 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 26 27 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 27 30 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified nil) 30 63 (fontified nil) 63 83 (fontified nil) 83 84 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 84 85 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 85 88 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified nil) 88 117 (fontified nil) 117 140 (fontified nil) 140 141 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 141 142 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified nil) 142 145 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified nil) 145 175 (fontified nil) 175 176 (fontified nil) 176 177 (fontified nil) 177 178 (font-lock-multiline t fontified nil) 178 180 (face font-lock-keyword-face font-lock-multiline t fontified nil) 180 181 (fontified nil) 181 184 (face font-lock-variable-name-face fontified nil) 184 206 (fontified nil) 206 210 (fontified nil) 210 222 (face font-lock-string-face fontified nil) 222 225 (fontified nil) 225 245 (fontified nil) 245 246 (fontified nil) 246 248 (fontified nil) 248 252 (fontified nil) 252 264 (face font-lock-string-face fontified nil) 264 266 (fontified nil) 266 267 (rear-nonsticky nil fontified nil)) . 401) (nil fontified t 401 . 402) (nil fontified t 431 . 464) (nil fontified t 489 . 518) (nil fontified t 577 . 578) (nil fontified t 585 . 607) (nil fontified t 647 . 649) (nil rear-nonsticky nil 667 . 668) nil (nil rear-nonsticky nil 667 . 668) (nil fontified nil 665 . 668) (nil fontified nil 653 . 665) (nil fontified nil 649 . 653) (nil fontified nil 647 . 649) (nil fontified nil 646 . 647) (nil fontified nil 626 . 646) (nil fontified nil 623 . 626) (nil fontified nil 611 . 623) (nil fontified nil 607 . 611) (nil fontified nil 585 . 607) (nil fontified nil 582 . 585) (nil fontified nil 581 . 582) (nil fontified nil 579 . 581) (nil fontified nil 578 . 579) (nil fontified nil 577 . 578) (nil fontified nil 576 . 577) (nil fontified nil 546 . 576) (nil fontified nil 543 . 546) (nil fontified nil 542 . 543) (nil fontified nil 541 . 542) (nil fontified nil 489 . 541) (nil fontified nil 486 . 489) (nil fontified nil 485 . 486) (nil fontified nil 484 . 485) (nil fontified nil 464 . 484) (nil fontified nil 431 . 464) (nil fontified nil 428 . 431) (nil fontified nil 427 . 428) (nil fontified nil 426 . 427) (nil fontified nil 402 . 426) (nil fontified nil 401 . 402) (401 . 668) nil (134 . 401) nil (#("
Request token URL	https://api.twitter.com/oauth/request_token
Authorize URL	https://api.twitter.com/oauth/authorize
Access token URL	https://api.twitter.com/oauth/access_token

my $nt = Net::Twitter->new{
    consumer_key =>bq8Z7921Vf3uBmgkUuK2w,
    consumer_key =>" 0 1 (fontified t) 1 25 (fontified t) 25 26 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 26 27 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t) 27 30 (face cperl-nonoverridable-face cperl-postpone (face . cperl-nonoverridable-face) fontified t) 30 63 (fontified t) 63 83 (fontified t) 83 84 (face font-lock-warning-face fontified t cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15)) 84 85 (face font-lock-warning-face fontified t cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15)) 85 88 (face cperl-nonoverridable-face fontified t cperl-postpone (face . cperl-nonoverridable-face)) 88 140 (fontified t) 140 141 (face font-lock-warning-face fontified t cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15)) 141 142 (face font-lock-warning-face fontified t cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15)) 142 145 (face cperl-nonoverridable-face fontified t cperl-postpone (face . cperl-nonoverridable-face)) 145 175 (fontified t) 175 176 (fontified t) 176 177 (fontified t) 177 178 (font-lock-multiline t fontified t) 178 180 (face font-lock-keyword-face font-lock-multiline t fontified t) 180 181 (fontified t) 181 184 (face font-lock-variable-name-face fontified t) 184 206 (fontified t) 206 210 (fontified t) 210 222 (face font-lock-string-face fontified t) 222 225 (fontified t) 225 245 (fontified t) 245 246 (fontified t) 246 248 (fontified t) 248 252 (fontified t) 252 264 (face font-lock-string-face fontified t) 264 267 (fontified t)) . -134) nil (#("IMYf1K7na6KA4Ogn2JDkV7SiZAXMC5jQg6qb644O7RI" 0 43 (fontified t)) . -134) nil (#(" " 0 1 (fontified t)) . -402) nil (#(" " 0 1 (fontified t)) . -403) nil (#(" " 0 1 (fontified t)) . -404) nil (#(" " 0 1 (fontified t)) . -405) nil (#(" " 0 1 (fontified nil)) . -406) (#("	" 0 1 (fontified nil)) . 407) (403 . 407) 404 nil (nil rear-nonsticky nil 424 . 425) (nil fontified nil 403 . 425) (403 . 425) nil (#("	bq8Z7921Vf3uBmgkUuK2w" 0 22 (fontified t)) . 117) nil (nil rear-nonsticky nil 374 . 375) (nil fontified nil 117 . 375) (117 . 375) nil (116 . 118) (t 21216 . 4640) nil (#("s" 0 1 (fontified t face cperl-nonoverridable-face)) . -165) nil (#("e" 0 1 (fontified t)) . -166) nil (#("c" 0 1 (fontified t)) . -167) nil (#("r" 0 1 (fontified t)) . -168) nil (#("e" 0 1 (fontified t)) . -169) nil (#("t" 0 1 (fontified t)) . -170) nil (#(" " 0 1 (fontified t)) . -171) nil (#("=" 0 1 (fontified t)) . -172) nil (#(" " 0 1 (fontified t)) . -173) nil (#(">" 0 1 (fontified t)) . -174) nil (nil rear-nonsticky nil 174 . 175) (nil fontified nil 173 . 175) (nil fontified nil 171 . 173) (nil fontified nil 165 . 171) (165 . 175) nil (164 . 165) nil (207 . 208) nil (185 . 186) nil (#(" " 0 1 (fontified t)) . -164) nil (280 . 283) nil (272 . 277) nil (#("w" 0 1 (fontified t face font-lock-string-face)) . -272) nil (267 . 273) nil (269 . 270) nil (268 . 269) nil (266 . 268) nil (265 . 266) nil (#("*" 0 1 (fontified t)) . -265) nil (#("(" 0 1 (fontified t)) . -266) nil (266 . 267) nil (265 . 266) nil (#("\"" 0 1 (fontified t face font-lock-string-face)) . -265) nil (264 . 266) nil (244 . 264) nil (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -244) nil (244 . 245) nil (#("%" 0 1 (fontified t)) . -244) nil (244 . 245) nil (#("%" 0 1 (fontified t)) . -244) nil (#("r" 0 1 (fontified t font-lock-multiline t face cperl-hash-face)) . -245) nil (#("e" 0 1 (fontified t font-lock-multiline t face cperl-hash-face)) . -246) nil (241 . 247) nil (240 . 241) nil (#("
" 0 1 (fontified t)) . -144) nil (#(" " 0 1 (fontified t face underline)) . -145) nil (#(" " 0 1 (fontified t face underline)) . -145) nil (237 . 240) nil (#(" " 0 1 (fontified t face underline)) . -237) nil (#(">" 0 1 (fontified t)) . -238) nil (230 . 239) nil (#("c" 0 1 (fontified t)) . -230) nil (#("e" 0 1 (fontified t)) . -231) nil (228 . 232) nil (216 . 228) (#("ac" 0 2 (fontified nil)) . -216) nil (213 . 218) nil (210 . 211) nil (211 . 212) nil (209 . 210) nil (#(" " 0 1 (fontified t face underline)) . -209) nil (#(">" 0 1 (fontified t)) . -210) nil (191 . 211) nil (186 . 190) nil (174 . 186) (#("consumer" 0 8 (fontified nil)) . -174) nil (#("_" 0 1 (fontified t)) . -182) nil (#("secret = >" 0 6 (fontified t) 6 8 (fontified t) 8 10 (fontified t)) . -183) nil (189 . 193) nil (#("-" 0 1 (fontified t)) . -189) nil (184 . 190) nil (#("c" 0 1 (fontified t)) . -184) nil (174 . 185) nil (#(" " 0 1 (fontified t face underline)) . -174) nil (#(" " 0 1 (fontified t face underline)) . -175) nil (175 . 176) nil (168 . 169) nil (#("$" 0 1 (fontified t)) . -168) nil (165 . 169) nil (#("-" 0 1 (fontified t)) . -165) nil (#(" " 0 1 (fontified t face underline)) . -166) nil (160 . 167) nil (#("-" 0 1 (fontified t)) . -160) nil (149 . 161) nil (146 . 147) nil (149 . 154) nil (148 . 150) nil (147 . 148) nil (146 . 148) nil (145 . 146) nil (146 . 147) nil (144 . 146) nil (143 . 144) nil (#("p" 0 1 (fontified t)) . -143) nil (143 . 144) nil (#("[" 0 1 (fontified t)) . -143) nil (#("
" 0 1 (fontified t)) . -144) nil (#("
" 0 1 (fontified t)) . -145) nil (144 . 146) nil (143 . 144) nil (139 . 143) nil (#("n" 0 1 (fontified nil)) . -139) nil (#("e" 0 1 (fontified nil face font-lock-type-face)) . -140) nil (#("w" 0 1 (fontified t)) . -141) nil (138 . 142) nil (126 . 138) (#("Net::T" 0 6 (fontified nil)) . -126) nil (131 . 132) nil (130 . 131) (#(":" 0 1 (fontified nil)) . 130) (129 . 131) nil (120 . 129) nil (#("%" 0 1 (fontified t face font-lock-variable-name-face)) . -120) nil (#("$" 0 1 (fontified t face font-lock-variable-name-face)) . -121) nil (117 . 122) nil (115 . 117) nil (114 . 115) nil (107 . 114) nil (106 . 107) (#(":" 0 1 (fontified nil)) . 106) (105 . 107) nil (98 . 105) nil (97 . 98) nil (#("u" 0 1 (fontified t)) . -97) nil (97 . 98) nil (#("
" 0 1 (fontified t)) . -97) nil (#("
" 0 1 (fontified t)) . -98) nil (#("
" 0 1 (fontified t)) . -99) nil (#("p" 0 1 (fontified t)) . -100) nil (#("p" 0 1 (fontified t)) . -101) nil (#("p" 0 1 (fontified t)) . -102) nil (100 . 103) nil (99 . 100) nil (#("print Dumper $res;" 0 5 (fontified t face cperl-nonoverridable-face) 5 18 (fontified t)) . 99) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("my $res = $scraper->scrape($url);" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 7 (fontified t face font-lock-variable-name-face) 7 33 (fontified t)) . 99) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . 99) nil (#("my $url = URI->new('http://www.amazon.co.jp/gp-product/4873116562');" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 7 (fontified t face font-lock-variable-name-face) 7 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t face font-lock-string-face) 20 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 37 (fontified t face font-lock-string-face) 37 65 (fontified t face font-lock-string-face) 65 66 (fontified t face font-lock-string-face) 66 68 (fontified t)) . 99) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("};" 0 2 (fontified t)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("   process '','yen' => 'TEXT'; " 0 10 (fontified t) 10 11 (fontified t) 11 13 (fontified t face font-lock-string-face) 13 14 (fontified t) 14 19 (fontified t face font-lock-string-face) 19 22 (fontified t) 22 23 (fontified t) 23 29 (fontified t face font-lock-string-face) 29 30 (fontified t) 30 31 (fontified t face underline)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("my $scraper = scraper{" 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 11 (fontified t face font-lock-variable-name-face) 11 13 (fontified t) 13 14 (fontified t) 14 22 (fontified t)) . 99) nil (151 . 152) nil (150 . 151) nil (#("\"" 0 1 (fontified t face font-lock-string-face)) . -150) nil (144 . 151) nil (#("<" 0 1 (fontified t)) . -144) nil (144 . 145) nil (142 . 144) nil (#("-" 0 1 (fontified t)) . -142) nil (124 . 143) nil (127 . 128) nil (#("p" 0 1 (fontified nil)) . -125) nil (#("r" 0 1 (fontified nil)) . -126) nil (#("o" 0 1 (fontified nil)) . -127) nil (#("c" 0 1 (fontified t)) . -128) nil (#("n" 0 1 (fontified t)) . -129) nil (123 . 130) nil (122 . 123) nil (#("{" 0 1 (fontified t)) . -124) nil (124 . 125) nil (123 . 124) nil (121 . 123) nil (120 . 121) nil (113 . 120) (#("sc" 0 2 (fontified nil)) . -113) nil (113 . 115) nil (#("s" 0 1 (fontified nil face cperl-nonoverridable-face)) . -113) nil (#("c" 0 1 (fontified nil)) . -114) nil (#("r" 0 1 (fontified nil)) . -115) nil (#("a" 0 1 (fontified nil)) . -116) nil (#("p" 0 1 (fontified nil)) . -117) nil (100 . 118) nil (#("n" 0 1 (fontified t)) . -100) nil (#("y" 0 1 (fontified t)) . -101) nil (99 . 102) nil (98 . 100) (t 21216 . 3376) nil (221 . 222) 201 nil (156 . 164) nil (#("6" 0 1 (face font-lock-string-face fontified t)) . -156) nil (155 . 157) nil (#("7" 0 1 (face font-lock-string-face fontified t)) . -155) nil (154 . 156) nil (#("5" 0 1 (face font-lock-string-face fontified t)) . -154) nil (153 . 155) nil (#("-" 0 1 (face font-lock-string-face fontified t)) . -153) nil (144 . 154) nil (124 . 144) nil (123 . 124) nil (119 . 123) nil (175 . 176) nil (158 . 175) nil (#("p" 0 1 (fontified t)) . -158) nil (#("r" 0 1 (fontified t)) . -159) nil (#("i" 0 1 (fontified t)) . -160) nil (#("t" 0 1 (fontified t)) . -161) nil (#(" " 0 1 (face underline font-lock-multiline t fontified t)) . -162) nil (158 . 163) nil (156 . 158) nil (105 . 106) nil (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -105) nil (153 . 154) nil (#("i" 0 1 (fontified t)) . -153) nil (151 . 154) nil (#("#" 0 1 (fontified t)) . -151) nil (150 . 152) nil (151 . 152) nil (149 . 151) nil (147 . 149) nil (127 . 147) nil (#("e" 0 1 (face font-lock-variable-name-face font-lock-multiline t fontified t)) . -127) nil (#("w" 0 1 (face font-lock-variable-name-face font-lock-multiline t fontified t)) . -128) nil (126 . 129) nil (#("%" 0 1 (fontified t)) . -126) nil (126 . 127) nil (#("T" 0 1 (fontified t)) . -126) nil (123 . 127) nil (122 . 123) nil (#("/" 0 1 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t)) . -122) nil (#("`" 0 1 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t)) . -123) nil (123 . 124) nil (#("." 0 1 (face font-lock-warning-face cperl-postpone (face . font-lock-warning-face) syntax-type string rear-nonsticky (syntax-table) syntax-table (15) fontified t)) . -123) nil (122 . 124) nil (121 . 122) nil (120 . 121) nil (118 . 120) nil (117 . 118) nil (110 . 117) nil (#("I" 0 1 (fontified t)) . -110) nil (#("R" 0 1 (fontified t)) . -111) nil (#("-" 0 1 (fontified t)) . -112) nil (107 . 113) nil (#("-" 0 1 (fontified t)) . -107) nil (#("=" 0 1 (fontified t)) . -108) nil (103 . 109) nil (#("%" 0 1 (face font-lock-variable-name-face font-lock-multiline t fontified t)) . -103) nil (99 . 104) nil (98 . 99) nil (#("
" 0 1 (fontified t)) . 98) nil (#("print $res->{yen};" 0 5 (face cperl-nonoverridable-face fontified t) 5 13 (fontified t) 13 16 (face font-lock-string-face fontified t) 16 18 (fontified t)) . 98) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 98) nil (#("
" 0 1 (fontified t)) . 98) nil (#("my $res = $scraper->scrape($uri);" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 7 (face font-lock-variable-name-face fontified t) 7 33 (fontified t)) . 98) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 98) nil (#("
" 0 1 (fontified t)) . 98) nil (#("my $uri = new URI('http://www.amazon.co.jp/gp/product/4822297314');" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 7 (face font-lock-variable-name-face fontified t) 7 18 (fontified t) 18 65 (face font-lock-string-face fontified t) 65 67 (fontified t)) . 98) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 98) nil (#("
" 0 1 (fontified t)) . 98) nil (#("};" 0 2 (fontified t)) . 98) nil (#("
" 0 1 (fontified t)) . 98) nil (#("   process '#buyboxTable b.price','yen' => 'TEXT';" 0 11 (fontified t) 11 33 (face font-lock-string-face fontified t) 33 34 (fontified t) 34 39 (face font-lock-string-face fontified t) 39 43 (fontified t) 43 49 (face font-lock-string-face fontified t) 49 50 (fontified t)) . 98) nil (#("
" 0 1 (fontified t)) . 98) nil (#("my $scraper = scraper{" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 11 (face font-lock-variable-name-face fontified t) 11 22 (fontified t)) . 98) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 98) (t 21216 . 2824) nil (241 . 242) nil (#("\"" 0 1 (fontified t face font-lock-string-face)) . -241) nil (195 . 196) nil (#("\"" 0 1 (fontified t face font-lock-string-face)) . -195) nil (147 . 148) (t 21216 . 2677) nil (#("
" 0 1 (fontified t font-lock-multiline t)) . -17) (t 21216 . 2655) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -148) nil (136 . 147) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -136) nil (#("u" 0 1 (face font-lock-string-face fontified t)) . -137) nil (#("y" 0 1 (face font-lock-string-face fontified t)) . -138) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -139) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -140) nil (#("x" 0 1 (face font-lock-string-face fontified t)) . -141) nil (#("T" 0 1 (face font-lock-string-face fontified t)) . -142) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -143) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -144) nil (#("l" 0 1 (face font-lock-string-face fontified t)) . -145) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -146) nil (143 . 147) nil (#("q" 0 1 (face font-lock-string-face fontified t)) . -143) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -144) nil (142 . 145) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -142) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -143) nil (#("x" 0 1 (face font-lock-string-face fontified t)) . -144) nil (136 . 142) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -136) nil (#("u" 0 1 (face font-lock-string-face fontified t)) . -137) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -138) nil (137 . 139) nil (#("y" 0 1 (face font-lock-string-face fontified t)) . -137) nil (135 . 138) nil (#("#" 0 1 (face font-lock-string-face fontified t)) . -135) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -136) nil (#("y" 0 1 (face font-lock-string-face fontified t)) . -137) nil (135 . 138) nil (#("." 0 1 (face font-lock-string-face fontified t)) . -135) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -136) nil (#("x" 0 1 (face font-lock-string-face fontified t)) . -137) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -138) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -139) nil (#("n" 0 1 (face font-lock-string-face fontified t)) . -140) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -141) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -142) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -143) nil (#("B" 0 1 (face font-lock-string-face fontified t)) . -144) nil (#("u" 0 1 (face font-lock-string-face fontified t)) . -145) nil (#("y" 0 1 (face font-lock-string-face fontified t)) . -146) (t 21216 . 1914) nil (#("
" 0 1 (fontified t)) . -248) nil (#("
" 0 1 (fontified t)) . -249) nil (#("print Dumper $uri;" 0 5 (fontified t font-lock-multiline t face cperl-nonoverridable-face) 5 18 (fontified t)) . 250) nil (194 . 195) nil (#("-" 0 1 (fontified t)) . -194) nil (#(">" 0 1 (fontified t)) . -195) (t 21216 . 1899) nil (194 . 196) nil (#("=" 0 1 (fontified t)) . -194) nil (194 . 195) nil (#("\\" 0 1 (fontified t)) . -194) nil (194 . 195) nil (#("=" 0 1 (fontified t)) . -194) nil (194 . 195) nil (#("+" 0 1 (fontified t)) . -194) nil (194 . 195) nil (#("_" 0 1 (fontified t)) . -194) nil (194 . 195) nil (#(" " 0 1 (fontified t)) . -194) (t 21216 . 1870) nil (267 . 268) nil (250 . 267) nil (#("o" 0 1 (fontified t)) . -250) nil (#("p" 0 1 (fontified t)) . -251) nil (#("r" 0 1 (fontified t)) . -252) nil (#("i" 0 1 (fontified t)) . -253) nil (250 . 254) nil (249 . 251) (t 21216 . 1710) nil (147 . 150) nil (#("B" 0 1 (face font-lock-string-face fontified t)) . -147) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -148) nil (#("x" 0 1 (face font-lock-string-face fontified t)) . -149) nil (146 . 150) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -146) nil (145 . 147) nil (#("y" 0 1 (face font-lock-string-face fontified t)) . -145) nil (136 . 146) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -136) nil (#("x" 0 1 (face font-lock-string-face fontified t)) . -137) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -138) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -139) nil (#("n" 0 1 (face font-lock-string-face fontified t)) . -140) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -141) nil (135 . 142) nil (#("#" 0 1 (face font-lock-string-face fontified t)) . -135) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -136) nil (#("u" 0 1 (face font-lock-string-face fontified t)) . -137) nil (#("y" 0 1 (face font-lock-string-face fontified t)) . -138) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -139) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -140) nil (#("x" 0 1 (face font-lock-string-face fontified t)) . -141) nil (#("T" 0 1 (face font-lock-string-face fontified t)) . -142) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -143) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -144) nil (#("l" 0 1 (face font-lock-string-face fontified t)) . -145) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -146) nil (#(" " 0 1 (fontified t)) . -287) nil (#("D" 0 1 (fontified t)) . -288) nil (#("u" 0 1 (fontified t)) . -289) nil (#("m" 0 1 (fontified t)) . -290) nil (#("p" 0 1 (fontified t)) . -291) nil (#("e" 0 1 (fontified t)) . -292) nil (#("r" 0 1 (fontified t)) . -293) nil (#("f" 0 1 (fontified t)) . -1) nil (#("n" 0 1 (fontified t)) . -2) nil (1 . 3) (t 21216 . 1330) nil (244 . 245) (t 21216 . 1223) nil (273 . 277) nil (#("U" 0 1 (fontified t)) . -273) nil (#("R" 0 1 (fontified t)) . -274) nil (#("I" 0 1 (fontified t)) . -275) nil (#("-" 0 1 (fontified t)) . -276) nil (#(">" 0 1 (fontified t)) . -277) nil (191 . 195) nil (nil rear-nonsticky nil 239 . 240) (nil fontified nil 239 . 240) (nil fontified nil 238 . 239) (nil fontified nil 210 . 238) (nil fontified nil 206 . 210) (nil fontified nil 205 . 206) (nil fontified nil 204 . 205) (nil fontified nil 203 . 204) (nil fontified nil 192 . 203) (nil fontified nil 191 . 192) (nil fontified nil 188 . 191) (188 . 240) nil (#("new(\"http://www.amazon.co.jp/gp/product/4822297314\")" 0 3 (fontified t) 3 4 (fontified t) 4 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 22 (face font-lock-string-face fontified t) 22 50 (face font-lock-string-face fontified t) 50 51 (face font-lock-string-face fontified t) 51 52 (fontified t)) . -222) nil (184 . 188) nil (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -184) nil (182 . 185) nil (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -182) nil (#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -183) nil (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -184) nil (178 . 185) nil (177 . 178) nil (177 . 178) (t 21216 . 1141) nil (272 . 279) (t 21216 . 1117) nil (283 . 284) nil (282 . 283) nil (281 . 282) nil (#(";" 0 1 (fontified t)) . -281) nil (281 . 282) nil (279 . 281) nil (278 . 279) nil (273 . 278) nil (#("%" 0 1 (fontified t)) . -273) nil (266 . 274) nil (#("print Dumper($res);" 0 5 (face cperl-nonoverridable-face font-lock-multiline t fontified t) 5 19 (fontified t)) . 266) nil (135 . 155) nil (#("$" 0 1 (face font-lock-string-face rear-nonsticky (syntax-table) syntax-table (1) fontified t)) . -135) nil (135 . 136) nil (#("$" 0 1 (face font-lock-string-face rear-nonsticky (syntax-table) syntax-table (1) fontified t)) . -135) nil (135 . 136) nil (#("." 0 1 (face font-lock-string-face fontified t)) . -135) nil (170 . 177) (#("scra" 0 4 (fontified t)) . -170) nil (170 . 174) nil (#("t" 0 1 (fontified t)) . -170) nil (#("w" 0 1 (fontified t)) . -171) nil (#("e" 0 1 (fontified t)) . -172) nil (#("e" 0 1 (fontified t)) . -173) nil (#("t" 0 1 (fontified t)) . -174) nil (#("s" 0 1 (fontified t)) . -175) nil (138 . 142) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -138) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -139) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -140) nil (#("s" 0 1 (face font-lock-string-face fontified t)) . -141) nil (#("u" 0 1 (face font-lock-string-face fontified t)) . -142) nil (#("l" 0 1 (face font-lock-string-face fontified t)) . -143) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -144) nil (156 . 157) nil (155 . 156) nil (#("-" 0 1 (face font-lock-string-face fontified t)) . -155) nil (155 . 156) nil (#("\"" 0 1 (face font-lock-string-face fontified t)) . -155) nil (153 . 156) nil (#("Z" 0 1 (face font-lock-string-face fontified t)) . -153) nil (147 . 154) nil (#("-" 0 1 (fontified t)) . -147) nil (#("=" 0 1 (fontified t)) . -148) nil (136 . 149) nil (#(";" 0 1 (face font-lock-string-face fontified t)) . -136) nil (136 . 137) nil (123 . 136) nil (#("   };" 0 5 (fontified t)) . 123) nil (#("
" 0 1 (fontified t)) . 123) nil (#("        process 'a[rel=\"bookmark\"]', link => '@href';" 0 16 (fontified t) 16 35 (face font-lock-string-face fontified t) 35 37 (fontified t) 37 41 (face font-lock-string-face fontified t) 41 45 (fontified t) 45 46 (face font-lock-string-face fontified t) 46 51 (face cperl-array-face fontified t) 51 52 (face font-lock-string-face fontified t) 52 53 (fontified t)) . 123) nil (#("
" 0 1 (fontified t)) . 123) nil (#("        process \".entry-date\", when => 'TEXT';" 0 16 (fontified t) 16 29 (face font-lock-string-face fontified t) 29 31 (fontified t) 31 35 (face font-lock-string-face fontified t) 35 39 (fontified t) 39 45 (face font-lock-string-face fontified t) 45 46 (fontified t)) . 123) nil (#("
" 0 1 (fontified t)) . 123) nil (#("        process \".entry-content\", body =>'TEXT';" 0 16 (fontified t) 16 32 (face font-lock-string-face fontified t) 32 34 (fontified t) 34 38 (face font-lock-string-face fontified t) 38 41 (fontified t) 41 47 (face font-lock-string-face fontified t) 47 48 (fontified t)) . 123) nil (#("
" 0 1 (fontified t)) . 123) nil (#("   process \"li.status\",\"tweets[]\" => scraper{" 0 11 (fontified t) 11 22 (face font-lock-string-face fontified t) 22 23 (fontified t) 23 33 (face font-lock-string-face fontified t) 33 45 (fontified t)) . 123) nil (104 . 111) (#("sc" 0 2 (face font-lock-variable-name-face fontified t)) . -104) nil (104 . 106) nil (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -104) nil (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -105) nil (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -106) nil (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -107) nil (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -108) nil (104 . 109) nil (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -104) nil (#("w" 0 1 (face font-lock-variable-name-face fontified t)) . -105) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -106) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -107) nil (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -108) nil (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -109) (t 21216 . 600) nil (405 . 409) nil (#("6" 0 1 (fontified t face font-lock-string-face)) . -405) nil (404 . 406) nil (#("8" 0 1 (fontified t face font-lock-string-face)) . -404) nil (400 . 405) nil (#("7" 0 1 (fontified t face font-lock-string-face)) . -400) nil (399 . 401) nil (#("5" 0 1 (fontified t face font-lock-string-face)) . -399) nil (#("7" 0 1 (fontified t face font-lock-string-face)) . -400) nil (394 . 401) nil (374 . 394) nil (#("." 0 1 (fontified t face font-lock-string-face)) . -374) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -375) nil (#("m" 0 1 (fontified t face font-lock-string-face)) . -376) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -377) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -378) nil (369 . 379) nil (368 . 369) nil (364 . 368) nil (#("h" 0 1 (fontified t face font-lock-string-face)) . -364) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -365) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -366) nil (#("p" 0 1 (fontified t face font-lock-string-face)) . -367) nil (364 . 368) nil (#("h" 0 1 (fontified t face font-lock-string-face)) . -364) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -365) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -366) nil (#("p" 0 1 (fontified t face font-lock-string-face)) . -367) nil (#("s" 0 1 (fontified t face font-lock-string-face)) . -368) nil (#(":" 0 1 (fontified t face font-lock-string-face)) . -369) nil (#("/" 0 1 (fontified t face font-lock-string-face)) . -370) nil (#("/" 0 1 (fontified t face font-lock-string-face)) . -371) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -372) nil (#("f" 0 1 (fontified t face font-lock-string-face)) . -373) nil (#("f" 0 1 (fontified t face font-lock-string-face)) . -374) nil (#("i" 0 1 (fontified t face font-lock-string-face)) . -375) nil (#("l" 0 1 (fontified t face font-lock-string-face)) . -376) nil (#("i" 0 1 (fontified t face font-lock-string-face)) . -377) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -378) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -379) nil (#("e" 0 1 (fontified t face font-lock-string-face)) . -380) nil (#("." 0 1 (fontified t face font-lock-string-face)) . -381) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -382) nil (#("m" 0 1 (fontified t face font-lock-string-face)) . -383) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -384) nil (#("z" 0 1 (fontified t face font-lock-string-face)) . -385) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -386) nil (#("n" 0 1 (fontified t face font-lock-string-face)) . -387) nil (#("." 0 1 (fontified t face font-lock-string-face)) . -388) nil (#("c" 0 1 (fontified t face font-lock-string-face)) . -389) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -390) nil (#("." 0 1 (fontified t face font-lock-string-face)) . -391) nil (#("j" 0 1 (fontified t face font-lock-string-face)) . -392) nil (#("p" 0 1 (fontified t face font-lock-string-face)) . -393) nil (#("/" 0 1 (fontified t face font-lock-string-face)) . -394) nil (#("g" 0 1 (fontified t face font-lock-string-face)) . -395) nil (#("p" 0 1 (fontified t face font-lock-string-face)) . -396) nil (#("/" 0 1 (fontified t face font-lock-string-face)) . -397) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -398) nil (#("s" 0 1 (fontified t face font-lock-string-face)) . -399) nil (#("s" 0 1 (fontified t face font-lock-string-face)) . -400) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -401) nil (#("c" 0 1 (fontified t face font-lock-string-face)) . -402) nil (#("i" 0 1 (fontified t face font-lock-string-face)) . -403) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -404) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -405) nil (#("e" 0 1 (fontified t face font-lock-string-face)) . -406) nil (#("s" 0 1 (fontified t face font-lock-string-face)) . -407) nil (#("/" 0 1 (fontified t face font-lock-string-face)) . -408) nil (#("n" 0 1 (fontified t face font-lock-string-face)) . -409) nil (#("e" 0 1 (fontified t face font-lock-string-face)) . -410) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -411) nil (#("w" 0 1 (fontified t face font-lock-string-face)) . -412) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -413) nil (#("r" 0 1 (fontified t face font-lock-string-face)) . -414) nil (#("k" 0 1 (fontified t face font-lock-string-face)) . -415) nil (#("/" 0 1 (fontified t face font-lock-string-face)) . -416) nil (#("m" 0 1 (fontified t face font-lock-string-face)) . -417) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -418) nil (#("i" 0 1 (fontified t face font-lock-string-face)) . -419) nil (#("n" 0 1 (fontified t face font-lock-string-face)) . -420) nil (#("." 0 1 (fontified t face font-lock-string-face)) . -421) nil (#("h" 0 1 (fontified t face font-lock-string-face)) . -422) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -423) nil (#("m" 0 1 (fontified t face font-lock-string-face)) . -424) nil (#("l" 0 1 (fontified t face font-lock-string-face)) . -425) (t 21216 . 555) nil (410 . 426) nil (390 . 410) nil (370 . 390) nil (369 . 370) nil (368 . 369) nil (#(":" 0 1 (face font-lock-string-face fontified t)) . -368) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -369) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -370) nil (369 . 371) nil (368 . 369) nil (364 . 368) nil (#("h" 0 1 (face font-lock-string-face fontified t)) . -364) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -365) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -366) nil (#("p" 0 1 (face font-lock-string-face fontified t)) . -367) nil (#(":" 0 1 (face font-lock-string-face fontified t)) . -368) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -369) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -370) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -371) nil (#("w" 0 1 (face font-lock-string-face fontified t)) . -372) nil (#("i" 0 1 (face font-lock-string-face fontified t)) . -373) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -374) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -375) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -376) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -377) nil (#("." 0 1 (face font-lock-string-face fontified t)) . -378) nil (#("c" 0 1 (face font-lock-string-face fontified t)) . -379) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -380) nil (#("m" 0 1 (face font-lock-string-face fontified t)) . -381) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -382) nil (#("f" 0 1 (face font-lock-string-face fontified t)) . -383) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -384) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -385) nil (#("l" 0 1 (face font-lock-string-face fontified t)) . -386) nil (#("s" 0 1 (face font-lock-string-face fontified t)) . -387) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -388) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -389) nil (#("n" 0 1 (face font-lock-string-face fontified t)) . -390) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -391) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -392) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -393) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -394) nil (395 . 396) nil (#("\"" 0 1 (face font-lock-string-face fontified t)) . -395) (t 21216 . 440) nil (394 . 395) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -394) nil (391 . 395) nil (371 . 391) nil (#("/" 0 1 (fontified t face font-lock-string-face)) . -371) nil (369 . 372) nil (368 . 369) nil (#("s" 0 1 (fontified t face font-lock-string-face)) . -368) nil (#(":" 0 1 (fontified t face font-lock-string-face)) . -369) nil (#("/" 0 1 (fontified t face font-lock-string-face)) . -370) nil (#("/" 0 1 (fontified t face font-lock-string-face)) . -371) nil (#("b" 0 1 (fontified t face font-lock-string-face)) . -372) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -373) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -374) nil (#("r" 0 1 (fontified t face font-lock-string-face)) . -375) nil (#("d" 0 1 (fontified t face font-lock-string-face)) . -376) nil (#("." 0 1 (fontified t face font-lock-string-face)) . -377) nil (#("c" 0 1 (fontified t face font-lock-string-face)) . -378) nil (#("s" 0 1 (fontified t face font-lock-string-face)) . -379) nil (#("." 0 1 (fontified t face font-lock-string-face)) . -380) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -381) nil (#("u" 0 1 (fontified t face font-lock-string-face)) . -382) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -383) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -384) nil (#("." 0 1 (fontified t face font-lock-string-face)) . -385) nil (#("a" 0 1 (fontified t face font-lock-string-face)) . -386) nil (#("c" 0 1 (fontified t face font-lock-string-face)) . -387) nil (#("." 0 1 (fontified t face font-lock-string-face)) . -388) nil (#("j" 0 1 (fontified t face font-lock-string-face)) . -389) nil (#("p" 0 1 (fontified t face font-lock-string-face)) . -390) (t 21216 . 410) nil (414 . 415) nil (409 . 410) nil (#(" " 0 1 (fontified t)) . -409) nil (414 . 415) nil (397 . 414) nil (396 . 397) nil (#("}" 0 1 (fontified t)) . 396) nil (#("
" 0 1 (fontified t)) . -396) nil (#("p" 0 1 (fontified t)) . -397) nil (397 . 398) nil (#("
" 0 1 (fontified t)) . 397) nil (#("   print Dump($tweet);" 0 3 (fontified t) 3 8 (face cperl-nonoverridable-face fontified t) 8 22 (fontified t)) . 397) nil (#("
" 0 1 (fontified t)) . 397) nil (#("for my $tweet (@{$res->{tweets}}){" 0 3 (face font-lock-keyword-face font-lock-multiline t fontified t) 3 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 13 (face font-lock-variable-name-face fontified t) 13 24 (fontified t) 24 30 (face font-lock-string-face fontified t) 30 34 (fontified t)) . 397) nil (385 . 391) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -385) nil (381 . 386) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -381) nil (#("u" 0 1 (face font-lock-string-face fontified t)) . -382) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -383) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -384) nil (#("." 0 1 (face font-lock-string-face fontified t)) . -385) nil (372 . 386) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -372) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -373) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -374) nil (372 . 375) nil (368 . 369) nil (369 . 371) nil (368 . 369) nil (#(";" 0 1 (face font-lock-string-face fontified t)) . -368) nil (368 . 369) nil (364 . 368) nil (#("h" 0 1 (face font-lock-string-face fontified t)) . -364) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -365) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -366) nil (#("p" 0 1 (face font-lock-string-face fontified t)) . -367) nil (#(":" 0 1 (face font-lock-string-face fontified t)) . -368) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -369) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -370) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -371) nil (#("w" 0 1 (face font-lock-string-face fontified t)) . -372) nil (#("i" 0 1 (face font-lock-string-face fontified t)) . -373) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -374) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -375) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -376) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -377) nil (#("." 0 1 (face font-lock-string-face fontified t)) . -378) nil (#("c" 0 1 (face font-lock-string-face fontified t)) . -379) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -380) nil (#("m" 0 1 (face font-lock-string-face fontified t)) . -381) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -382) nil (#("f" 0 1 (face font-lock-string-face fontified t)) . -383) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -384) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -385) nil (#("l" 0 1 (face font-lock-string-face fontified t)) . -386) nil (#("s" 0 1 (face font-lock-string-face fontified t)) . -387) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -388) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -389) nil (#("n" 0 1 (face font-lock-string-face fontified t)) . -390) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -391) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -392) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -393) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -394) (t 21215 . 64748) nil (457 . 458) nil (456 . 457) nil (451 . 456) nil (#("r" 0 1 (fontified nil)) . -451) nil (#("e" 0 1 (fontified nil)) . -452) nil (450 . 453) nil (449 . 450) nil (#(" " 0 1 (fontified t face underline)) . -449) nil (439 . 450) nil (#("print \"$tweet->{body} $tweet->{when} (link: $tweet->{link})\\n\";" 0 5 (fontified t face cperl-nonoverridable-face) 5 6 (fontified t) 6 62 (fontified t face font-lock-string-face) 62 63 (fontified t)) . 439) nil (#(" " 0 1 (fontified t face underline)) . -504) nil (#(" " 0 1 (fontified t face underline)) . -505) nil (#("
" 0 1 (fontified t)) . -506) nil (#(" " 0 1 (fontified t face underline)) . -507) nil (#(" " 0 1 (fontified t face underline)) . -508) nil (#(" " 0 1 (fontified t face underline)) . -509) nil (#(" " 0 1 (fontified t face underline)) . -510) nil (#(" " 0 1 (fontified t face underline)) . -511) nil (#(" " 0 1 (fontified t face underline)) . -512) nil (506 . 507) nil (#("
" 0 1 (fontified t)) . -327) nil (285 . 286) nil (#("f" 0 1 (fontified t face font-lock-string-face)) . -285) nil (247 . 248) nil (201 . 202) nil (#(" " 0 1 (fontified t)) . -120) nil (17 . 18) (t 21215 . 64436) nil (511 . 512) nil (500 . 501) nil (497 . 500) nil (496 . 497) nil (495 . 496) nil (491 . 495) nil (490 . 491) nil (481 . 490) nil (480 . 481) nil (476 . 480) nil (475 . 476) nil (474 . 475) nil (#("{" 0 1 (face font-lock-string-face fontified t)) . -474) nil (474 . 475) nil (473 . 474) nil (470 . 473) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -470) nil (#("h" 0 1 (face font-lock-string-face fontified t)) . -471) nil (#("n" 0 1 (face font-lock-string-face fontified t)) . -472) nil (469 . 473) nil (468 . 469) nil (#("[" 0 1 (face font-lock-string-face fontified t)) . -468) nil (468 . 469) nil (459 . 468) nil (458 . 459) nil (454 . 458) nil (453 . 454) nil (452 . 453) nil (#("=" 0 1 (face font-lock-string-face fontified t)) . -452) nil (446 . 453) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -446) nil (#("w" 0 1 (face font-lock-string-face fontified t)) . -447) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -448) nil (445 . 449) nil (#("#" 0 1 (face font-lock-string-face fontified t)) . -445) nil (445 . 446) nil (#("%" 0 1 (face font-lock-string-face fontified t)) . -445) nil (445 . 446) nil (#("T" 0 1 (face font-lock-string-face fontified t)) . -445) nil (438 . 446) nil (#("
" 0 1 (fontified t)) . -438) nil (#(" " 0 1 (face underline fontified t)) . -439) nil (#(" " 0 1 (face underline fontified t)) . -440) nil (#(" " 0 1 (face underline fontified t)) . -441) nil (#("
" 0 1 (fontified t)) . -442) nil (436 . 438) nil (437 . 440) nil (436 . 438) nil (435 . 436) nil (436 . 437) nil (434 . 436) nil (433 . 434) nil (432 . 433) nil (430 . 432) nil (424 . 430) (#("twe" 0 3 (fontified t)) . -424) nil (#("e" 0 1 (fontified t)) . -427) nil (424 . 428) nil (423 . 424) nil (417 . 423) nil (416 . 417) nil (#("[" 0 1 (fontified t)) . -416) nil (416 . 417) nil (415 . 416) nil (#("$" 0 1 (fontified t)) . -415) nil (415 . 416) nil (414 . 415) nil (409 . 414) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -409) nil (#("w" 0 1 (face font-lock-variable-name-face fontified t)) . -410) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -411) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -412) nil (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -413) nil (403 . 414) nil (#("a" 0 1 (fontified t)) . -403) nil (400 . 404) nil (398 . 400) nil (397 . 398) nil (395 . 397) nil (393 . 395) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -393) nil (388 . 394) nil (368 . 388) nil (367 . 368) nil (363 . 367) nil (#("process" 0 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t)) . 371) nil (nil rear-nonsticky nil 377 . 378) (nil fontified nil 363 . 378) (363 . 378) nil (#("h" 0 1 (face font-lock-string-face fontified t)) . -363) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -364) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -365) nil (#("p" 0 1 (face font-lock-string-face fontified t)) . -366) nil (#(":" 0 1 (face font-lock-string-face fontified t)) . -367) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -368) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -369) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -370) nil (#("i" 0 1 (face font-lock-string-face fontified t)) . -371) nil (370 . 372) nil (#("w" 0 1 (face font-lock-string-face fontified t)) . -370) nil (368 . 371) nil (367 . 368) nil (362 . 367) nil (361 . 362) nil (#(" " 0 1 (face underline font-lock-multiline t fontified t)) . -361) nil (353 . 362) nil (352 . 353) nil (344 . 352) nil (338 . 344) (#("twe" 0 3 (fontified nil)) . -338) nil (339 . 341) nil (#("w" 0 1 (fontified nil)) . -339) nil (339 . 340) nil (#("e" 0 1 (fontified nil)) . -339) nil (327 . 340) nil (324 . 327) nil (314 . 315) nil (309 . 314) nil (#("r" 0 1 (face cperl-array-face fontified t)) . -309) nil (#("h" 0 1 (face cperl-array-face fontified t)) . -310) nil (#("r" 0 1 (face cperl-array-face fontified t)) . -311) nil (#("e" 0 1 (face cperl-array-face fontified t)) . -312) nil (310 . 313) nil (#("e" 0 1 (face cperl-array-face fontified t)) . -310) nil (307 . 311) nil (#("@" 0 1 (fontified t)) . -307) nil (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -308) nil (305 . 309) nil (#("." 0 1 (fontified t)) . -305) nil (305 . 306) nil (#(" " 0 1 (face underline fontified t)) . -305) nil (#(">" 0 1 (fontified t)) . -306) nil (306 . 307) nil (#(">" 0 1 (fontified t)) . -306) nil (#(" " 0 1 (face underline fontified t)) . -307) nil (296 . 308) nil (295 . 296) nil (284 . 295) nil (#("-" 0 1 (face font-lock-string-face fontified t)) . -284) nil (281 . 285) nil (#("p" 0 1 (face font-lock-string-face fontified t)) . -281) nil (281 . 282) nil (280 . 281) nil (278 . 280) nil (#("\"" 0 1 (face font-lock-string-face fontified t)) . -278) nil (262 . 279) nil (261 . 262) nil (260 . 261) nil (259 . 260) nil (#("\"" 0 1 (face font-lock-string-face fontified t)) . -259) nil (251 . 260) nil (#("-" 0 1 (fontified t)) . -251) nil (240 . 252) nil (#("c" 0 1 (face font-lock-string-face fontified t)) . -240) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -241) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -242) nil (239 . 243) nil (#(" " 0 1 (face underline fontified t)) . -239) nil (237 . 240) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -237) nil (#("y" 0 1 (face font-lock-string-face fontified t)) . -238) nil (237 . 239) nil (#("y" 0 1 (face font-lock-string-face fontified t)) . -237) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -238) nil (#("-" 0 1 (face font-lock-string-face fontified t)) . -239) nil (224 . 240) nil (#("r" 0 1 (fontified t)) . -224) nil (224 . 225) nil (#(" " 0 1 (face underline fontified t)) . -224) nil (#(" " 0 1 (face underline fontified t)) . -225) nil (216 . 226) nil (214 . 215) nil (206 . 214) nil (186 . 206) nil (#("." 0 1 (face font-lock-string-face fontified t)) . -186) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -187) nil (168 . 188) nil (#("        process" 0 15 (fontified t)) . 168) nil (#("\"" 0 1 (face font-lock-string-face fontified t)) . -183) nil (176 . 184) nil (#("p" 0 1 (fontified t)) . -176) nil (168 . 177) nil (#("
" 0 1 (fontified t)) . -175) nil (170 . 173) nil (171 . 172) nil (#(" " 0 1 (face underline fontified t)) . -171) nil (171 . 172) nil (170 . 171) nil (167 . 170) nil (166 . 167) nil (157 . 166) nil (#(" " 0 1 (face underline fontified t)) . -157) nil (#(">" 0 1 (fontified t)) . -158) nil (154 . 159) nil (153 . 154) nil (152 . 153) nil (147 . 152) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -147) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -148) nil (148 . 149) nil (#("s" 0 1 (face font-lock-string-face fontified t)) . -148) nil (132 . 149) nil (#(" " 0 1 (face underline fontified t)) . -132) nil (122 . 123) nil (122 . 132) nil (125 . 126) nil (124 . 125) nil (121 . 124) nil (120 . 121) nil (#("{" 0 1 (fontified t)) . -120) nil (120 . 121) nil (110 . 120) nil (#("\\" 0 1 (fontified t)) . -110) nil (#(" " 0 1 (face underline font-lock-multiline t fontified t)) . -111) nil (104 . 112) nil (#("e" 0 1 (face font-lock-variable-name-face font-lock-multiline t fontified t)) . -104) nil (99 . 105) nil (#("
" 0 1 (fontified t)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("print Dumper $res->{result};" 0 5 (face cperl-nonoverridable-face fontified t) 5 20 (fontified t) 20 26 (face font-lock-string-face fontified t) 26 28 (fontified t)) . 99) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("my $res = $scraper->scrape($url);" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 7 (face font-lock-variable-name-face fontified t) 7 33 (fontified t)) . 99) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("my $url = URI->new('http://t-board.office.tuat.ac.jp/T/menu.php#Cheu');" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 7 (face font-lock-variable-name-face fontified t) 7 19 (fontified t) 19 69 (face font-lock-string-face fontified t) 69 71 (fontified t)) . 99) nil (#("
" 0 1 (font-lock-multiline t fontified t)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("};" 0 2 (fontified t)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("   process '.titleContainerTop','result' =>'TEXT';" 0 11 (fontified t) 11 31 (face font-lock-string-face fontified t) 31 32 (fontified t) 32 40 (face font-lock-string-face fontified t) 40 43 (fontified t) 43 49 (face font-lock-string-face fontified t) 49 50 (fontified t)) . 99) nil (#("
" 0 1 (fontified t)) . 99) nil (#("my $scraper = scraper{" 0 2 (face font-lock-keyword-face font-lock-multiline t fontified t) 2 3 (fontified t) 3 11 (face font-lock-variable-name-face fontified t) 11 22 (fontified t)) . 99) (t 21215 . 63541) nil (59 . 60) nil (53 . 59) nil (52 . 53) (#(":" 0 1 (fontified nil)) . 52) (51 . 53) nil (43 . 51) nil (#("
" 0 1 (fontified t face font-lock-comment-face)) . -16) (t 21215 . 63493) nil (275 . 281) nil (#("D" 0 1 (fontified t)) . -275) nil (#("u" 0 1 (fontified t)) . -276) nil (#("m" 0 1 (fontified t)) . -277) nil (#("p" 0 1 (fontified t)) . -278) nil (270 . 279) nil (#("i" 0 1 (fontified t)) . -270) nil (269 . 271) nil (#("w" 0 1 (fontified t)) . -269) nil (#("a" 0 1 (fontified t)) . -270) nil (#("r" 0 1 (fontified t)) . -271) nil (#("n" 0 1 (face font-lock-type-face font-lock-multiline t fontified t)) . -272) (t 21215 . 63449) nil (155 . 156) nil (149 . 155) nil (129 . 149) nil (109 . 129) nil (#("w" 0 1 (fontified t)) . -109) nil (106 . 110) nil (108 . 109) nil (107 . 108) nil (105 . 107) nil (104 . 105) nil (87 . 104) nil (#("%" 0 1 (fontified t face font-lock-variable-name-face)) . -87) nil (83 . 88) nil (81 . 83) nil (80 . 81) nil (79 . 80) nil (#("9" 0 1 (fontified t)) . -79) nil (72 . 80) nil (71 . 72) nil (70 . 71) nil (63 . 70) (t 21215 . 63275) nil (192 . 193) nil (191 . 192) nil (#("\"" 0 1 (face font-lock-string-face fontified t)) . -191) nil (185 . 192) nil (184 . 185) nil (173 . 184) nil (#("a" 0 1 (fontified t)) . -173) nil (173 . 174) nil (171 . 173) nil (170 . 171) nil (169 . 170) nil (165 . 169) nil (164 . 165) nil (158 . 164) nil (138 . 158) nil (137 . 138) nil (134 . 135) nil (#("B" 0 1 (fontified t)) . -135) nil (135 . 136) nil (83 . 84) nil (75 . 83) nil (126 . 128) nil (121 . 124) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -121) nil (120 . 122) nil (#("B" 0 1 (face font-lock-string-face fontified t)) . -120) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -121) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -122) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -123) nil (126 . 128) nil (120 . 124) nil (#("$" 0 1 (face font-lock-string-face rear-nonsticky (syntax-table) syntax-table (1) fontified t)) . -120) nil (108 . 121) nil (#("p" 0 1 (face font-lock-string-face fontified t)) . -108) nil (#("[" 0 1 (face font-lock-string-face fontified t)) . -109) nil (109 . 110) nil (107 . 109) nil (#("p" 0 1 (face font-lock-string-face fontified t)) . -107) nil (105 . 108) nil (85 . 105) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -85) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -86) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -87) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -88) nil (85 . 89) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -85) nil (#("o" 0 1 (face font-lock-string-face fontified t)) . -86) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -87) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -88) nil (83 . 89) nil (#("-" 0 1 (face font-lock-string-face fontified t)) . -83) nil (81 . 84) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -81) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . -82) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -83) nil (#("-" 0 1 (face font-lock-string-face fontified t)) . -84) nil (81 . 85) nil (80 . 81) nil (76 . 80) nil (#("h" 0 1 (face font-lock-string-face fontified t)) . -76) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -77) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -78) nil (76 . 79) nil (77 . 78) nil (75 . 77) nil (#(";" 0 1 (fontified t)) . -75) nil (#(";" 0 1 (fontified t)) . -76) nil (75 . 77) nil (65 . 75) nil (63 . 65) nil (#("u" 0 1 (fontified nil)) . -63) nil (#("s" 0 1 (fontified nil)) . -64) nil (#("e" 0 1 (face font-lock-keyword-face font-lock-multiline t fontified t)) . -65) nil (#(" " 0 1 (face underline font-lock-multiline t fontified t)) . -66) nil (63 . 67) nil (62 . 63) nil (61 . 62) nil (54 . 61) nil (#("S" 0 1 (fontified t)) . -54) nil (#("c" 0 1 (fontified t)) . -55) nil (#("r" 0 1 (fontified t)) . -56) nil (#("p" 0 1 (fontified t)) . -57) nil (#("a" 0 1 (fontified t)) . -58) nil (#("e" 0 1 (fontified t)) . -59) nil (#("r" 0 1 (fontified t)) . -60) nil (56 . 61) nil (#("p" 0 1 (fontified t)) . -56) nil (54 . 57) nil (53 . 54) (#(":" 0 1 (fontified nil)) . 53) (52 . 54) nil (45 . 52) nil (#("
" 0 1 (fontified t)) . -45) nil (43 . 46) nil (42 . 43) nil (30 . 42) nil (29 . 30) nil (28 . 29) nil (22 . 28) nil (#("s" 0 1 (face cperl-nonoverridable-face font-lock-multiline t fontified t)) . -22) nil (#("t" 0 1 (fontified t)) . -23) nil (#("r" 0 1 (fontified t)) . -24) nil (#("i" 0 1 (fontified t)) . -25) nil (#("c" 0 1 (fontified t)) . -26) nil (#("t" 0 1 (fontified t)) . -27) nil (22 . 28) nil (#("s" 0 1 (face cperl-nonoverridable-face font-lock-multiline t fontified t)) . -22) nil (#("t" 0 1 (fontified t)) . -23) nil (#("r" 0 1 (fontified t)) . -24) nil (18 . 25) nil (16 . 18) nil (12 . 16) nil (#("e" 0 1 (face font-lock-comment-face fontified t)) . -12) nil (1 . 13) nil (#("u" 0 1 (fontified t)) . -1) nil (#("s" 0 1 (fontified t)) . -2) nil (#("e" 0 1 (face font-lock-keyword-face font-lock-multiline t fontified t)) . -3) nil (1 . 4) (t . -1)))
